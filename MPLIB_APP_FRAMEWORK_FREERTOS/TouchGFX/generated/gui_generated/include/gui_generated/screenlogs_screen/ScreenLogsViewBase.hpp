/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENLOGSVIEWBASE_HPP
#define SCREENLOGSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screenlogs_screen/ScreenLogsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <gui/containers/LogPanel.hpp>

class ScreenLogsViewBase : public touchgfx::View<ScreenLogsPresenter>
{
public:
    ScreenLogsViewBase();
    virtual ~ScreenLogsViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void LED_Toggle()
    {
        // Override and implement this function in ScreenLogs
    }
    virtual void updateSystemDescription()
    {
        // Override and implement this function in ScreenLogs
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::SwipeContainer PagesMenu;
    touchgfx::Container Welcome;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::TextAreaWithOneWildcard systemDescriptionTextArea;
    touchgfx::Container Logs;
    LogPanel logPanel1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SYSTEMDESCRIPTIONTEXTAREA_SIZE = 25;
    touchgfx::Unicode::UnicodeChar systemDescriptionTextAreaBuffer[SYSTEMDESCRIPTIONTEXTAREA_SIZE];

private:

    /*
     * Tick Counter Declarations
     */
    static const uint32_t TICK_INTERACTION1_INTERVAL = 100;
    uint32_t frameCountInteraction1Interval;
    static const uint32_t TICK_INTERACTION2_INTERVAL = 200;
    uint32_t frameCountInteraction2Interval;
    static const uint32_t TICK_LED_TOGGLE_INTERVAL = 57;
    uint32_t frameCountLED_ToggleInterval;

};

#endif // SCREENLOGSVIEWBASE_HPP
