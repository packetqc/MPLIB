/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/StatusNavigationBarBase.hpp>
#include <images/BitmapDatabase.hpp>

StatusNavigationBarBase::StatusNavigationBarBase() :
    flexButtonCallback(this, &StatusNavigationBarBase::flexButtonCallbackHandler)
{
    setWidth(240);
    setHeight(42);
    LayoutControls.setPosition(0, 0, 240, 40);
    Status_APP.setBitmaps(Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTIVE_ID), Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    Status_APP.setBitmapXY(0, 0);
    Status_APP.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CHECK_CIRCLE_OUTLINE_50_50_3D3D3D_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CHECK_CIRCLE_OUTLINE_50_50_009C00_SVG_ID));
    Status_APP.setIconXY(0, 0);
    Status_APP.setVisible(false);
    Status_APP.setPosition(8, 53, 96, 92);
    LayoutControls.add(Status_APP);

    Control_Play.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PLAY_ARROW_24_24_3D3D3D_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PLAY_ARROW_24_24_4D99EB_SVG_ID));
    Control_Play.setIconXY(0, 0);
    Control_Play.setVisible(false);
    Control_Play.setAction(flexButtonCallback);
    Control_Play.setPosition(205, 8, 26, 26);
    LayoutControls.add(Control_Play);

    Control_Pause.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PAUSE_24_24_3D3D3D_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PAUSE_24_24_4D99EB_SVG_ID));
    Control_Pause.setIconXY(0, 0);
    Control_Pause.setVisible(false);
    Control_Pause.setAction(flexButtonCallback);
    Control_Pause.setPosition(10, 7, 24, 24);
    LayoutControls.add(Control_Pause);

    add(LayoutControls);
}

StatusNavigationBarBase::~StatusNavigationBarBase()
{

}

void StatusNavigationBarBase::initialize()
{

}

void StatusNavigationBarBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Control_Pause)
    {
        //SetPause
        //When Control_Pause clicked call virtual function
        //Call SetPause
        SetPause();
    }
    if (&src == &Control_Play)
    {
        //SetPlay
        //When Control_Play clicked call virtual function
        //Call SetPlay
        SetPlay();
    }
}
