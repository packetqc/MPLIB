/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenchangeconfig_screen/ScreenChangeConfigViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenChangeConfigViewBase::ScreenChangeConfigViewBase() :
    buttonCallback(this, &ScreenChangeConfigViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ScreenChangeConfigViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Background.setPosition(0, 0, 240, 240);
    Background.setColor(touchgfx::Color::getColorFromRGB(230, 234, 250));
    Background.setBorderColor(touchgfx::Color::getColorFromRGB(57, 147, 250));
    Background.setBorderSize(3);
    add(Background);

    screenTitle1.setXY(0, 0);
    add(screenTitle1);

    layoutChangeConfig.setPosition(0, 40, 240, 200);
    layoutChangeConfig.enableHorizontalScroll(false);
    layoutChangeConfig.setScrollbarsColor(touchgfx::Color::getColorFromRGB(8, 55, 102));
    layoutChangeConfig.setScrollbarsAlpha(179);
    layoutChangeConfig.setScrollbarsPermanentlyVisible();
    modeCryptSD.setBoxWithBorderPosition(0, 0, 30, 30);
    modeCryptSD.setBorderSize(1);
    modeCryptSD.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(177, 209, 224), touchgfx::Color::getColorFromRGB(39, 194, 67), touchgfx::Color::getColorFromRGB(177, 209, 224), touchgfx::Color::getColorFromRGB(39, 194, 67));
    modeCryptSD.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NOTIFICATION_NO_ENCRYPTION_GMAILERRORRED_30_30_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NOTIFICATION_ENHANCED_ENCRYPTION_30_30_E8F6FB_SVG_ID));
    modeCryptSD.setIconXY(0, 0);
    modeCryptSD.setAction(flexButtonCallback);
    modeCryptSD.setPosition(33, 11, 30, 30);
    layoutChangeConfig.add(modeCryptSD);

    modeCryptScreen.setBoxWithBorderPosition(0, 0, 30, 30);
    modeCryptScreen.setBorderSize(1);
    modeCryptScreen.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(177, 209, 224), touchgfx::Color::getColorFromRGB(39, 194, 67), touchgfx::Color::getColorFromRGB(177, 209, 224), touchgfx::Color::getColorFromRGB(39, 194, 67));
    modeCryptScreen.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NOTIFICATION_NO_ENCRYPTION_GMAILERRORRED_30_30_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NOTIFICATION_ENHANCED_ENCRYPTION_30_30_E8F6FB_SVG_ID));
    modeCryptScreen.setIconXY(0, 0);
    modeCryptScreen.setAction(flexButtonCallback);
    modeCryptScreen.setPosition(33, 55, 30, 30);
    layoutChangeConfig.add(modeCryptScreen);

    labelCryptSD.setXY(68, 17);
    labelCryptSD.setColor(touchgfx::Color::getColorFromRGB(56, 102, 140));
    labelCryptSD.setLinespacing(0);
    labelCryptSD.setTypedText(touchgfx::TypedText(T___SINGLEUSE_45YD));
    layoutChangeConfig.add(labelCryptSD);

    labelCryptScreen.setXY(68, 61);
    labelCryptScreen.setColor(touchgfx::Color::getColorFromRGB(56, 102, 140));
    labelCryptScreen.setLinespacing(0);
    labelCryptScreen.setTypedText(touchgfx::TypedText(T___SINGLEUSE_59HH));
    layoutChangeConfig.add(labelCryptScreen);

    buttonChangePassword.setXY(33, 210);
    buttonChangePassword.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_PRESSED_ID));
    buttonChangePassword.setLabelText(touchgfx::TypedText(T___SINGLEUSE_ECBN));
    buttonChangePassword.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonChangePassword.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    layoutChangeConfig.add(buttonChangePassword);

    buttonSaveConfig.setXY(33, 150);
    buttonSaveConfig.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_PRESSED_ID));
    buttonSaveConfig.setLabelText(touchgfx::TypedText(T___SINGLEUSE_KJ7H));
    buttonSaveConfig.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonSaveConfig.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonSaveConfig.setAction(buttonCallback);
    layoutChangeConfig.add(buttonSaveConfig);

    buttonResetFactory.setXY(33, 94);
    buttonResetFactory.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_PRESSED_ID));
    buttonResetFactory.setLabelText(touchgfx::TypedText(T___SINGLEUSE_X5QG));
    buttonResetFactory.setLabelColor(touchgfx::Color::getColorFromRGB(250, 5, 5));
    buttonResetFactory.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonResetFactory.setAction(buttonCallback);
    layoutChangeConfig.add(buttonResetFactory);

    add(layoutChangeConfig);

    titleChangeConfig.setXY(44, 11);
    titleChangeConfig.setColor(touchgfx::Color::getColorFromRGB(56, 102, 140));
    titleChangeConfig.setLinespacing(0);
    titleChangeConfig.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G9FW));
    add(titleChangeConfig);
}

ScreenChangeConfigViewBase::~ScreenChangeConfigViewBase()
{

}

void ScreenChangeConfigViewBase::setupScreen()
{
    screenTitle1.initialize();
}

void ScreenChangeConfigViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonResetFactory)
    {
        //ResetFactoryCall
        //When buttonResetFactory clicked call virtual function
        //Call resetFactory
        resetFactory();
    
        //ResetFactory
        //When ResetFactoryCall completed change screen to ScreenConfig
        //Go to ScreenConfig with block transition
        application().gotoScreenConfigScreenBlockTransition();
    }
    if (&src == &buttonSaveConfig)
    {
        //SaveConfigCall
        //When buttonSaveConfig clicked call virtual function
        //Call saveConfig
        saveConfig();
    
        //SaveConfig
        //When SaveConfigCall completed change screen to ScreenConfig
        //Go to ScreenConfig with screen transition towards East
        application().gotoScreenConfigScreenWipeTransitionEast();
    }
}

void ScreenChangeConfigViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &modeCryptSD)
    {
        //EncryptOnSD
        //When modeCryptSD clicked call virtual function
        //Call encryptOnSD
        encryptOnSD();
    }
    if (&src == &modeCryptScreen)
    {
        //EncryptOnScreen
        //When modeCryptScreen clicked call virtual function
        //Call encryptOnScreen
        encryptOnScreen();
    }
}
